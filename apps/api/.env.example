# =============================================================================
# FIRSTREAD ASSESSMENT API - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to `.env` and update the values according to your setup

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database connection URL
# Format: postgresql://username:password@host:port/database
# For local development, you can use:
# DATABASE_URL=postgresql://postgres:password@localhost:5432/contracts_db
# For cloud providers (Neon, Supabase, etc.):
DATABASE_URL=postgresql://username:password@your-host.com/database_name

# =============================================================================
# AI/ML CONFIGURATION
# =============================================================================
# Google Gemini AI API Key
# Get your API key from: https://ai.google.dev/
# Required for contract generation functionality
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# Secret key for JWT token signing
# Generate a secure random string (32+ characters recommended)
# You can generate one using: openssl rand -base64 32
SECRET_KEY=your_super_secret_jwt_key_here

# JWT Algorithm for token signing/verification
# Options: HS256, HS384, HS512, RS256, etc.
HASH_ALGORITHM=HS256

# JWT token expiration time in minutes
# Default: 30 minutes (adjust based on security requirements)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================
# Environment mode (development, staging, production)
# ENVIRONMENT=development

# API Debug mode (true/false)
# DEBUG=true

# CORS allowed origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# Rate limiting (requests per minute)
# RATE_LIMIT=100

# =============================================================================
# DOCKER CONFIGURATION (if using Docker)
# =============================================================================
# Database configuration for Docker Compose
# POSTGRES_DB=contracts_db
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=your_postgres_password
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. Never commit the actual .env file to version control
# 2. Keep sensitive values (API keys, passwords) secure
# 3. Use different values for development/staging/production
# 4. For production, consider using environment-specific secret management
# 5. Update DATABASE_URL format for your specific database provider
